<resources>
    <string name="app_name">TutorJava</string>
    <string name="txtJava">Java Programming</string>
    <string name="aboutJava"> จากวิกิพีเดีย สารานุกรมเสรีไปยังการนำทางไปยังการค้นหาโลโก้ของภาษาจาวาภาษาจาวา
        (อังกฤษ: Java programming language) เป็นภาษาโปรแกรมเชิงวัตถุ
        (อังกฤษ: Object Oriented Programming) พัฒนาโดย เจมส์ กอสลิง
        และวิศวกรคนอื่นๆ ที่ ซัน ไมโครซิสเต็มส์ ภาษาจาวาถูกพัฒนาขึ้นในปี พ.ศ. 2534 (ค.ศ. 1991)
        โดยเป็นส่วนหนึ่งของ โครงการกรีน (the Green Project)
        และสำเร็จออกสู่สาธารณะในปี พ.ศ. 2538 (ค.ศ. 1995)
        ซึ่งภาษานี้มีจุดประสงค์เพื่อใช้แทนภาษาซีพลัสพลัส (C++)
        โดยรูปแบบที่เพิ่มเติมขึ้นคล้ายกับภาษาอ็อบเจกต์ทีฟซี (Objective-C)
        แต่เดิมภาษานี้เรียกว่า ภาษาโอ๊ก (Oak) ซึ่งตั้งชื่อตามต้นโอ๊กใกล้ที่ทำงานของ เจมส์ กอสลิง
        แต่ว่ามีปัญหาทางลิขสิทธิ์ จึงเปลี่ยนไปใช้ชื่อ "จาวา" ซึ่งเป็นชื่อกาแฟแทน </string>
    <string name="JDK">
        บทความนี้มีชื่อเป็นภาษาอังกฤษ เนื่องจากยังไม่มีชื่อภาษาไทยที่กระชับ เหมาะสม หรือไม่รู้วิธีอ่านในภาษาไทย
Java Development Kit (JDK) เป็นชุดคำสั่งในการพัฒนาโปรแกรมด้วยภาษาจาวา ซึ่งชุดพัฒนาโปรแกรม JDK ประกอบด้วย 3 รุ่นย่อยดังนี้

Java SE (Standard Edition) สำหรับพัฒนาโปรแกรมบนคอมพิวเตอร์เดสก์ทอปทั่วไป
Java ME (Micro Edition) สำหรับพัฒนาโปรแกรมบนอุปกรณ์พกพา เช่น โทรศัพท์มือถือ หรือพีดีเอ ส่วนมากใช้เขียนโปรแกรมเกม
Java EE (Enterprise Edition) สำหรับพัฒนาโปรแกรมในองค์กรใหญ่ๆ หรือมีขอบเขตของโครงการกว้างมาก
ชุดพัฒนาโปรแกรม JDK นั้น เป็นมาตรฐานที่ถูกกำหนดโดยบริษัทซัน ไมโครซิสเต็มส์ และมีผู้พัฒนาชุดพัฒนาโปรแกรม JDK ออกมามากมาย เช่น ซัน ไมโครซิสเต็มส์, ไอบีเอ็ม, และบีอีเอ ซิสเต็มส์
    </string>
    <string name="GroupDev">การดาวน์โหลดและติดตั้งชุดพัฒนาซอฟแวร์</string>
    <string name="content">สารบัญ</string>
    <string name="step_install">ขั้นตอนการติดตั้งโปรแกรม</string>
    <string name="step_install1">1) ขั้นตอนที่หนึ่ง</string>
    <string name="step_install2">2) ขั้นตอนที่สอง</string>
    <string name="step_install3">3) ขั้นตอนที่สาม</string>
    <string name="kin_variable">ชนิดของข้อมูลและตัวแปร</string>
    <string name="logical">ข้อมูลแบบตรรกะ(Logical)</string>
    <string name="detail_logical">
        ข้อมูลประเภทนี้จะมีค่าแบบ Boolean โดยมีค่าเพียงสองค่า คือ true (จริง) false (เท็จ)
    </string>
    <string name="sample_logical">
        ตัวอย่างเช่น boolean Click = true;
              boolean noClick = false;
        เป็นการประกาศตัวแปรชื่อ Click ให้เป็นข้อมูลบูลีนและกำหนดให้เป็นจริง ส่วน onClick ถูกกำหนดให้เป็นตัวแปรบูลีนและกำหนดให้เป็นเท็จ
    </string>
    <string name="sample_code_logical">
       "@Nullable"
    </string>
    <string name="sample_code_logical2">
        "@Override"
    </string>
    <string name="sample_code_logical3">
        "public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,
                             @Nullable Bundle savedInstanceState) {
            View view = inflater.inflate(R.layout.content, container,false);
            return view;
        }//OnCreateView"
    </string>
    <string name="exit">ออกโปรแกรม</string>
    <string name="AboutJavaTechnology">
        เทคโนโลยี จาวา เป็นทั้งภาษาโปรแกรมและแพลตฟอร์ม
    </string>
    <string name="JavaLanguage">
        ภาษาโปรแกรม จาวา เป็นภาษาระดับสูงที่สามรถโดดเด่นด้วย buzzwords ดังต่อไปนี้
    </string>
    <string name="JavaLanguage2">
        .Simple             .Architecture neutral
    </string>
    <string name="JavaLanguage3">
        .Object oriented    .Portable
    </string>
    <string name="JavaLanguage4">
        .Distributed        .High performance
    </string>
    <string name="JavaLanguage5">
        .Multithreaded      .Robust
    </string>
    <string name="JavaLanguage6">
         .Dynamic            .Secure
    </string>
    <string name="JavaLanguage7">
            คำศัพท์แต่ละคำอธิบายไว้ใน The Java Language Environment เขียนโดย James Gosling และ Henry McGilton
        ในภาษาการเขียนโปรแกรม จาวา ซอร์สโค้ดทั้งหมดจะถูกเขียนครั้งแรกในไฟล์ข้อความล้วนลงท้ายด้วยนามสกุล.Java ไฟล์ต้นฉบับเล่านั้นจะถูกรวบรวมเป็น.Class ไฟล์ โดยจาวาคอมไพเลอร์
        .Class ไฟล์ไม่ได้มีรหัสที่มีถิ่นกำเนิดในการประมวลผล แต่มีการ bytecode - ภาษาเครื่องของ Java Virtual Machine (Java VM)
    </string>
    <string name="JavaLanguage8">
            เนื่องจาก Java VM มีอยู่ในระบบปฎิบัติการ ที่แตกต่างกันมาก .class ไฟล์เดัยวกันจึงสามารถ เรัยกใช้บน Microsoft Windows ,Linux หรือ Mac OS เครื่องเสมือนบางเครื่องเช่น
        Java SE HotSpot โดยย่อทำตามขั้นตอนเพิ่มเติมตอนรันไทม์เพื่อเพิ่มประสิทธิภาพให้แอปพลิเคชั่นของคุณ ซึ่งรวมถึงงานต่าง ๆ เช่นการค้นหาคอขวดของประสิทธิภาพและการคอมไพล์ซ้ำ (เป็นรหัสเนทีฟ)ส่วนที่ใช้บ่อยของโค้ด
    </string>
    <string name="JavaLanguage9">
        ผ่าน Java VM แอปพลิเคชันเดียวกันสามารถทำงานบนหลายแพลตฟอร์มได้
    </string>
    <string name="JavaLanguage10">
        แพลฟอร์ม จาวา
    </string>
    <string name="JavaLanguage11">
            แพลตฟอร์ม คือ อาร์ดแวร์หรือซอฟต์แวร์สภาพแวดล้อมที่โปรแกรมทำงาน เราได้กล่าวถึงแพลตฟอร์มยอกนิยมบางอย่างเช่น Microsoft Windows,Linux,Mac OS แล้ว แพลตฟอร์มส่วนใหญ่
        สามรถอธิบายได้ว่าเป็นการรวมกันของระบบปฎิบัติการและฮาร์ดแวร์พื้นฐาน แพลตฟอร์ม จาวา แตกต่างจากแพลตฟอร์มอื่นๆ ส่วนใหญ่วึ่งเป้นแพลตฟอร์มเฉพาะซอฟต์แวร์ที่ทำงานบนแพลตฟอร์มฮาร์ดแวร์อื่นๆ
    </string>
    <string name="JavaLanguage12">
        แพลตฟอร์ม จาวา มีสององค์ประกอบ
    </string>
    <string name="JavaLanguage13">
        .โปรแกรม Java Virtual Machine
    </string>
    <string name="JavaLanguage14">
        .Java Application Programming Interface(API)
    </string>
    <string name="JavaLanguage15">
        คุณได้รับการแนะนำให้รู้จักกับ Java Virtual Machine มันเป็นฐานสำหรับแพลตฟอร์มจาวา และพอร์ตไปยังแพลตฟอร์มที่ใช้ฮาร์ดแวร์ต่างๆ
    </string>
    <string name="JavaLanguage16">
        API เป็นชุดซอฟต์แวร์ ซอฟต์แวร์สำเร็จรูปที่มีความสามรถที่มีประโยชน์มากมาย ถุกแบ่งออกเป็นไลบรารีของคลาสและอินเทอร์เฟซที่เกี่ยวข้อง ป็นที่รู้จักกันว่า เป็นแพคเกจ
        เทคโนโลยีจาวาสามารถทำอะไรได้บ้าง การทำงานบางอย่างเน้นไปที่ฟังชันของ API
    </string>
    <string name="JavaLanguage17">
        API และ Java Virtual Machine ป้องกันโปรแกรมจากฮาร์ดแวร์พื้นฐาน
    </string>
    <string name="JavaLanguage18">
        ในฐานะที่เป็นสภาพแวดล้อมที่ไม่ขึ้นอยู่กับแพลตฟอร์ม แพลตฟอร์มจาวาอาจช้ากว่าโค้ดเนทีฟเล็กน้อย อย่างไรก็ตามความก้าวหน้าในเทคโลยีคอมไพเลอร์และเวอร์ชวลแมชชีนกำลังเสนอประสิทธิภาพใกล้เคียงกับโค้ดเนทีฟ
        คำว่า Java Virtual Machine และ JVM  หมายถึง Virtual Machine สำหรับแพลตฟอร์มจาวา
    </string>
    <string name="Can_Java">
        เทคโนโลยี จาวา สามารถทำอะไรได้บ้าง
    </string>
    <string name="Can_Java2">
        ภาษาการเขียนโปรแกรม จาวา ระดับสูงที่ใช้งานทั่วไปเป็นแพลตฟอร์มซอฟต์แวร์ที่ทรงพลัง ทุกการใช้งานอย่างสมบูรณ์ของแพลตฟอร์ม จาวา ให้คุณสมบัติดังต่อไปนี้
    </string>
    <string name="Can_Java3">
        .เครื่องมือพัฒนา : เครื่องมือพัฒนาให้ทุกสิ่งที่คุณต้องการสำหรับการรวบรวม,เรียกใช้,ตรวจสอบ,แก้ไขข้อบกพร่องและจัดทำเอกสารแอปพลิเคชั่นของคุณ ในฐานะนักพัฒนาใหม่
        เครื่องมือหลักที่คุณใช้คือ จาวาคอมไพเลอร์ จาวาตัวเรียกใช้งานและ javadoc เครื่องมือเอกสาร
    </string>
    <string name="Can_Java4">
        .Application Programming Interface(API):API ให้ฟังก์ชันการทำงานหลักของภาษาเขียนโปรแกรม Java มีคลาวที่มีประโยชน์มากมายพร้อมใช้งานใน
        แอปพลิเคชันของคุณเอง ครอบคลุมทุกอย่างตั้งแต่วัตถุพื้นฐานเครือข่ายและความปลอดอภัยไปจนถึงการสร้าง XML และการเข้าถึงฐานข้อมูลและอื่นๆ API หลักมีขนาดใหญ่มาก ดูภาพรวมได้ที่ Java Platform Standard Edition 8 Document
    </string>
    <string name="Can_Java5">
        .เทคโนโลยีการปรับใช้ : ซอฟต์แวร์ JDK มอบกลไกมาตรฐานเช่นซอฟต์แวร์ Java Web Start และซอฟต์แวร์ Java Plug-In สำหรับการปรับใช้แอปพลิเคชั่นแอปพลิเคชั่นของคุรไปยังปลายทาง
    </string>
    <string name="Can_Java6">
        .ชุดเครื่องมือส่วนต่อประสานผู้ใช้ : ชุดเครื่องมือ JavaFx,Swing และ Java 2D ช่วยให้คุณสามรถสร้าง Graphical User Interface(GUIs) ที่ซับซ้อนได้
    </string>
    <string name="Can_Java7">
        .ไลบรารีการรวม : ไลบรารีการรวมเช่น Java IDL API , JDBC API การตั้งชื่อจาวาและ Directory(JNDI)API,Java RMI และ Java Remote Method
        การขอร้องผ่าน Internet Inter-ORB โปรโตคอลเทคโนโลยี(เทคโนโลยี Java RMI-IIOP)เปิดใช้งานการเข้าถึงฐานข้อมูล และจัดการของวัตถุระยะไกล
    </string>
    <string name="JavaTechnology">
        เทคโนโลยีจาวาจะเปลี่ยนชีวิตรของฉันได้อย่งไร
    </string>
    <string name="JavaTechnology2">
        เราไม่สามรถรับประกันได้ว่าคุณจะมีชื่อเสียงโชคลาภหรือแม้แต่งานถ้าคุณเรียนรู้ภาษาการเขียนโปรแกรมจาวา ถึงกระนั้นก้มีแนวโน้มที่จะทำให้โปรแกรมของคุณและต้องการความพยายามน้อยกว่าภาษาอื่น ๆ เราเชื่อว่าเทคโนโลยี จาวา
        จะช่วยให้คุณทำสิ่งต่อไปนี้
    </string>
    <string name="JavaTechnology3">
        .เริ่มต้นอย่างรวดเร็ว : แม้ว่าภาษาการเขียนโปรแกรม จาวา เป็นภาษาเชิงวัตถุที่ทรงพลัง แต่ก้เรียนรู้ได้ง่ายโดยเฉพาะอย่างยิ่งสำหรับโปรแกรมเมอร์ที่คุ้นเคยกับ C หรือ C++ แล้ว
    </string>
    <string name="JavaTechnology4">
        .เขียนโค้ดที่น้อยกว่า : การเปรียบเทียบตัวชี้วัดของดปรแกรม(จำนวนคลาส,จำนวนเมธอดและอื่น ๆ)แนะนำให้โปรแกรมที่เขียนด้วยภาษาโปรแกรมจาวา สามรถที่มีขนาดเล้กกว่าโปรแกรมที่เขียนด้วย C ++ สี่เท่า
    </string>
    <string name="JavaTechnology5">
        .เขียนโค้ดที่ดีกว่า : ภาษาการเขียนโปรแกรมจาวา ส่งเสริมการเขียนโปรแกรมที่ดีและการรวบรวมขยะอัตโนมัติช่วยให้คุณหลีกเลี่ยงการรั่วไหล
    </string>

</resources>
